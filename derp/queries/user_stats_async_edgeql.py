# AUTOGENERATED FROM 'derp/queries/user_stats.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UserStatsResult(NoPydanticValidation):
    bot_users: int
    regular_users: int
    premium_users: int
    total_users: int


async def user_stats(
    executor: gel.AsyncIOExecutor,
) -> UserStatsResult:
    return await executor.query_single(
        """\
        # Get bot users vs regular users stats
        select {
            bot_users := count((select telegram::User filter .is_bot)),
            regular_users := count((select telegram::User filter not .is_bot)),
            premium_users := count((select telegram::User filter .is_premium)),
            total_users := count(telegram::User)
        };\
        """,
    )
