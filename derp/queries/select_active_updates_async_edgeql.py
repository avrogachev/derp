# AUTOGENERATED FROM 'derp/queries/select_active_updates.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import datetime
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class SelectActiveUpdatesResult(NoPydanticValidation):
    id: uuid.UUID
    update_id: int
    update_type: str
    raw_data: str
    handled: bool | None
    created_at: datetime.datetime
    expires_at: datetime.datetime | None
    from_user: SelectActiveUpdatesResultFromUser | None
    chat: SelectActiveUpdatesResultChat | None


@dataclasses.dataclass
class SelectActiveUpdatesResultChat(NoPydanticValidation):
    id: uuid.UUID
    chat_id: int
    display_name: str | None
    type: str


@dataclasses.dataclass
class SelectActiveUpdatesResultFromUser(NoPydanticValidation):
    id: uuid.UUID
    user_id: int
    display_name: str | None
    is_bot: bool


async def select_active_updates(
    executor: gel.AsyncIOExecutor,
    *,
    chat_id: int,
    limit: int,
) -> list[SelectActiveUpdatesResult]:
    return await executor.query(
        """\
        # Select ActiveUpdates per chat_id, sorted in descending order (most recent first)
        select telegram::ActiveBotUpdates {
            id,
            update_id,
            update_type,
            raw_data,
            handled,
            created_at,
            expires_at,
            from_user: {
                user_id,
                display_name,
                is_bot
            },
            chat: {
                chat_id,
                display_name,
                type
            }
        }
        filter .chat.chat_id = <int64>$chat_id
        order by .created_at desc
        limit <int64>$limit;\
        """,
        chat_id=chat_id,
        limit=limit,
    )
